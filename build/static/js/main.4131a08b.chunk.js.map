{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","isError","className","Filter","filter","handler","value","onChange","PersonForm","props","onSubmit","addPerson","name","handleName","number","handleNumber","type","Persons","persons","deleteHandler","buttonHandler","window","confirm","person","personById","map","key","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","statusMessage","setStatusMessage","useEffect","numberService","namesToShow","toLowerCase","includes","event","target","preventDefault","personObject","duplicates","length","returnedInfo","setTimeout","catch","error","removedPerson","concat","console","log","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4131a08b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n    }\r\n  \r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n    }\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n  \r\n  export default { \r\n    getAll, \r\n    create, \r\n    update,\r\n    remove \r\n  }","import React, { useState, useEffect } from 'react'\nimport numberService from './services/numbers'\n\nconst Notification = ({ message, isError }) => {\n  if(message === null) {\n    return null\n  } else if (isError) {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n}\n\nconst Filter = ({filter, handler}) => {\n  return (\n    <form>\n      <div>filter shown with<input value={filter} onChange={handler} /></div>\n    </form>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>name: <input value={props.name} onChange={props.handleName}/></div>\n      <div>number: <input value={props.number} onChange={props.handleNumber} /></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nconst Persons = ({persons, deleteHandler}) => {\n  const personById = id => {\n    return (persons.filter(person => person.id === id)[0])\n  }\n  const buttonHandler= id => {\n    if(window.confirm(`Delete ${personById(id).name} ?`)){\n      deleteHandler(id)\n    }\n  }\n  return (\n    <div>\n      {persons.map(person =>\n        <div \n          key={person.name}>{person.name} {person.number}\n          <button onClick={() => buttonHandler(person.id)}>delete</button>\n        </div>\n      )}\n    </div>    \n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ statusMessage, setStatusMessage] = useState({message: null, isError: false})\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleAddPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const duplicates = persons.filter(person => person.name===newName)\n    if(duplicates.length>0){\n      if(window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)){\n        numberService\n          .update(duplicates[0].id, {...duplicates[0], number: newNumber})\n          .then(returnedInfo => {\n            setPersons(persons.map(person => person.id !== duplicates[0].id ? person : returnedInfo))\n            setNewName('')\n            setNewNumber('')\n            setStatusMessage({\n              message: `Number of ${returnedInfo.name} changed to ${returnedInfo.number}`,\n              isError: false\n              })\n            setTimeout(() => {\n              setStatusMessage({message:null, isError: false})\n            }, 2000)\n          })\n          .catch(error => {\n            const removedPerson = persons.filter(person => person.name === newName)[0]\n            setPersons(persons.filter(person => person.id !== removedPerson.id))\n            setStatusMessage({\n              message: `Information of ${removedPerson.name} has already been removed from the server`,\n              isError: true\n            })\n            setTimeout(() => {\n              setStatusMessage({\n                message: null,\n                isError: false\n              })\n            }, 2000)\n          })\n      }\n    } else {\n      numberService\n        .create(personObject)\n        .then(data => {\n          setPersons(persons.concat(data))\n          setNewName('')\n          setNewNumber('')\n          setStatusMessage({\n            message:`${data.name} added`,\n            isError: false\n          })\n          setTimeout(() => {\n            setStatusMessage({\n              message: null,\n              isError: false})\n          }, 2000)\n        })\n        .catch(error => {\n          setStatusMessage({\n            message: `${error.response.data.error}`,\n            isError: true\n          })\n          setTimeout(() => {\n            setStatusMessage({\n              message: null,\n              isError: false\n            })\n          }, 5000)\n          console.log(error.response.data)\n        })\n    }    \n  }\n  \n  const handleDeletePerson = id => {\n    numberService\n    .remove(id)\n    .then(result => {\n      setPersons(persons.filter(person => person.id !== id))\n      setStatusMessage({\n        message: `${persons.filter(person => person.id === id)[0].name} deleted`,\n        isError: false\n      })\n      setTimeout(() => {\n        setStatusMessage({\n          message: null,\n          isError: false\n        })\n      }, 2000)\n    })\n    .catch(error => {\n      const removedPerson = persons.filter(person => person.id === id)[0]\n      setPersons(persons.filter(person => person.id !== id))\n      setStatusMessage({\n        message: `${removedPerson.name} was already deleted`,\n        isError: true\n      })\n      setTimeout(() => {\n        setStatusMessage({\n          message: null,\n          isError: false\n        })\n      }, 2000)\n      \n    })\n  }\n\n  const namesToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={statusMessage.message} isError={statusMessage.isError} />\n      <Filter filter={newFilter} handler={handleFilterChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        addPerson={handleAddPerson}\n        name={newName} handleName={handleNameChange}\n        number={newNumber} handleNumber={handleNewNumber}\n      />\n    \n      <h2>Numbers</h2>\n\n      <Persons persons={namesToShow} deleteHandler={handleDeletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}